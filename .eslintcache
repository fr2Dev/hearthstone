[{"C:\\web\\sites\\hearthstone\\src\\App.tsx":"1","C:\\web\\sites\\hearthstone\\src\\reportWebVitals.ts":"2","C:\\web\\sites\\hearthstone\\src\\components\\home.tsx":"3","C:\\web\\sites\\hearthstone\\src\\components\\index.ts":"4","C:\\web\\sites\\hearthstone\\src\\logic\\actions\\index.ts":"5","C:\\web\\sites\\hearthstone\\src\\logic\\actions\\fetch.ts":"6","C:\\web\\sites\\hearthstone\\src\\index.tsx":"7","C:\\web\\sites\\hearthstone\\src\\logic\\reducers\\infosReducer.ts":"8","C:\\web\\sites\\hearthstone\\src\\logic\\api.ts":"9","C:\\web\\sites\\hearthstone\\src\\types\\index.ts":"10","C:\\web\\sites\\hearthstone\\src\\types\\actions.ts":"11","C:\\web\\sites\\hearthstone\\src\\components\\lastExtension.tsx":"12","C:\\web\\sites\\hearthstone\\src\\components\\globalStyles.ts":"13","C:\\web\\sites\\hearthstone\\src\\components\\styled\\cardList.tsx":"14","C:\\web\\sites\\hearthstone\\src\\components\\styled\\index.ts":"15","C:\\web\\sites\\hearthstone\\src\\logic\\hooks\\useMoreContent.ts":"16","C:\\web\\sites\\hearthstone\\src\\components\\styled\\loadingWrapper.tsx":"17","C:\\web\\sites\\hearthstone\\src\\components\\logo.tsx":"18","C:\\web\\sites\\hearthstone\\src\\components\\loader.tsx":"19","C:\\web\\sites\\hearthstone\\src\\components\\styled\\animations.ts":"20","C:\\web\\sites\\hearthstone\\src\\components\\styled\\button.ts":"21","C:\\web\\sites\\hearthstone\\src\\components\\styled\\layout.ts":"22","C:\\web\\sites\\hearthstone\\src\\components\\cardsList.tsx":"23"},{"size":285,"mtime":1606468997358,"results":"24","hashOfConfig":"25"},{"size":425,"mtime":1606382933992,"results":"26","hashOfConfig":"25"},{"size":1091,"mtime":1606469033565,"results":"27","hashOfConfig":"25"},{"size":248,"mtime":1606412983071,"results":"28","hashOfConfig":"25"},{"size":48,"mtime":1606400856092,"results":"29","hashOfConfig":"25"},{"size":851,"mtime":1606407632042,"results":"30","hashOfConfig":"25"},{"size":1004,"mtime":1606397405489,"results":"31","hashOfConfig":"25"},{"size":873,"mtime":1606402236535,"results":"32","hashOfConfig":"25"},{"size":430,"mtime":1606400156645,"results":"33","hashOfConfig":"25"},{"size":1159,"mtime":1606419273598,"results":"34","hashOfConfig":"25"},{"size":481,"mtime":1606402369259,"results":"35","hashOfConfig":"25"},{"size":1968,"mtime":1606483663958,"results":"36","hashOfConfig":"25"},{"size":374,"mtime":1606468380721,"results":"37","hashOfConfig":"25"},{"size":234,"mtime":1606470664839,"results":"38","hashOfConfig":"25"},{"size":203,"mtime":1606468986675,"results":"39","hashOfConfig":"25"},{"size":1059,"mtime":1606479884032,"results":"40","hashOfConfig":"25"},{"size":1389,"mtime":1606466510507,"results":"41","hashOfConfig":"25"},{"size":3090,"mtime":1606466677499,"results":"42","hashOfConfig":"25"},{"size":425,"mtime":1606419715274,"results":"43","hashOfConfig":"25"},{"size":205,"mtime":1606419614640,"results":"44","hashOfConfig":"25"},{"size":1181,"mtime":1606468322148,"results":"45","hashOfConfig":"25"},{"size":789,"mtime":1606469272500,"results":"46","hashOfConfig":"25"},{"size":1781,"mtime":1606484287025,"results":"47","hashOfConfig":"25"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1m3814f",{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"60","messages":"61","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"70","messages":"71","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"78","messages":"79","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"92","messages":"93","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"94"},"C:\\web\\sites\\hearthstone\\src\\App.tsx",[],"C:\\web\\sites\\hearthstone\\src\\reportWebVitals.ts",[],"C:\\web\\sites\\hearthstone\\src\\components\\home.tsx",[],"C:\\web\\sites\\hearthstone\\src\\components\\index.ts",[],"C:\\web\\sites\\hearthstone\\src\\logic\\actions\\index.ts",[],"C:\\web\\sites\\hearthstone\\src\\logic\\actions\\fetch.ts",[],"C:\\web\\sites\\hearthstone\\src\\index.tsx",["95"],"C:\\web\\sites\\hearthstone\\src\\logic\\reducers\\infosReducer.ts",[],"C:\\web\\sites\\hearthstone\\src\\logic\\api.ts",[],"C:\\web\\sites\\hearthstone\\src\\types\\index.ts",[],"C:\\web\\sites\\hearthstone\\src\\types\\actions.ts",[],"C:\\web\\sites\\hearthstone\\src\\components\\lastExtension.tsx",["96"],"C:\\web\\sites\\hearthstone\\src\\components\\globalStyles.ts",[],"C:\\web\\sites\\hearthstone\\src\\components\\styled\\cardList.tsx",[],"C:\\web\\sites\\hearthstone\\src\\components\\styled\\index.ts",[],"C:\\web\\sites\\hearthstone\\src\\logic\\hooks\\useMoreContent.ts",["97"],"C:\\web\\sites\\hearthstone\\src\\components\\styled\\loadingWrapper.tsx",[],"C:\\web\\sites\\hearthstone\\src\\components\\logo.tsx",[],"C:\\web\\sites\\hearthstone\\src\\components\\loader.tsx",[],"C:\\web\\sites\\hearthstone\\src\\components\\styled\\animations.ts",[],"C:\\web\\sites\\hearthstone\\src\\components\\styled\\button.ts",[],"C:\\web\\sites\\hearthstone\\src\\components\\styled\\layout.ts",[],"C:\\web\\sites\\hearthstone\\src\\components\\cardsList.tsx",["98"],"import { useEffect, useState } from 'react';\n// Types\nimport { Card } from '../types';\n// Hooks\nimport { useMoreContent } from '../logic/hooks';\n// Components\nimport { CardList, Button, ButtonWrapper } from './styled';\n\nexport interface CardsListProps {\n  cards: Card[];\n  currentExtension: string;\n}\n\nconst CardsList: React.FC<CardsListProps> = ({ cards, currentExtension }) => {\n  const [extension, setExtension] = useState(cards);\n  const {\n    contentToShow,\n    resetContent,\n    handleShowMoreContent,\n    handleShowAll,\n    isMore,\n  } = useMoreContent(extension as []);\n\n  const getFilteredCards = (currentExtension: string) => {\n    const getBaseFilter = (card: Card) =>\n      (card.type === 'Spell' || card.type === 'Minion') &&\n      card.text &&\n      !card.text.includes('FX') &&\n      card.img;\n\n    if (currentExtension === 'All') {\n      return cards.filter((card: Card) => getBaseFilter(card));\n    } else {\n      return cards.filter((card: Card) => getBaseFilter(card) && card.cardSet === currentExtension);\n    }\n  };\n\n  //useEffect\n  useEffect(() => {\n    const newExtansion = getFilteredCards(currentExtension);\n    setExtension(newExtansion);\n    resetContent(newExtansion as []);\n  }, [currentExtension]);\n\n  return (\n    <>\n      <CardList>\n        {contentToShow.length > 0 &&\n          contentToShow.map((card) => {\n            const { cardId, name, img, imgGold } = card;\n\n            return <li key={cardId}>{img && <img src={imgGold ? imgGold : img} alt={name} />}</li>;\n          })}\n      </CardList>\n      {isMore && (\n        <ButtonWrapper>\n          <Button onClick={handleShowMoreContent}>Load more</Button>\n          <Button onClick={handleShowAll}>Show All</Button>\n        </ButtonWrapper>\n      )}\n    </>\n  );\n};\n\nexport default CardsList;\n",{"ruleId":"99","severity":1,"message":"100","line":9,"column":10,"nodeType":"101","messageId":"102","endLine":9,"endColumn":23},{"ruleId":"99","severity":1,"message":"103","line":5,"column":24,"nodeType":"101","messageId":"102","endLine":5,"endColumn":28},{"ruleId":"104","severity":1,"message":"105","line":16,"column":6,"nodeType":"106","endLine":16,"endColumn":8,"suggestions":"107"},{"ruleId":"104","severity":1,"message":"108","line":43,"column":6,"nodeType":"106","endLine":43,"endColumn":24,"suggestions":"109"},"@typescript-eslint/no-unused-vars","'BrowserRouter' is defined but never used.","Identifier","unusedVar","'Card' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'contentPerGroup' and 'loopWithSlice'. Either include them or remove the dependency array.","ArrayExpression",["110"],"React Hook useEffect has missing dependencies: 'getFilteredCards' and 'resetContent'. Either include them or remove the dependency array.",["111"],{"desc":"112","fix":"113"},{"desc":"114","fix":"115"},"Update the dependencies array to be: [contentPerGroup, loopWithSlice]",{"range":"116","text":"117"},"Update the dependencies array to be: [currentExtension, getFilteredCards, resetContent]",{"range":"118","text":"119"},[578,580],"[contentPerGroup, loopWithSlice]",[1208,1226],"[currentExtension, getFilteredCards, resetContent]"]